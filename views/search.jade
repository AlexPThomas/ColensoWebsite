extends layout

block body
	.jumbotron
		+navbar("Colenso Project", "dropdown_menu")
			+nav_item("/") Home
			+nav_item("/list") Document list
			+nav_item("/search","active") Search
		.container
			h1= title
			p| Welcome to #{title}. 
		.container
			+panel-success("Search by XQuery - find all documents that match the given XQuery")
				h4 HINTS
				ul
					li The TEI Namespace and XQUERY text is already generated for you
					li You have to make sure you make a correct syntactically correct Query
					li Here are some examples of valid XQueries
					ul
						li //name
						li //name[@type = 'place' and position() = 1 and . = 'Manawarakau']
						li //author//name
				form(action="/XQueryResults",method="get")
					+input("text","searchString","Query","Search-XQuery",type="text")
					+submit-primary("Search")
		.container
			+panel-success("Search by text - find all documents that contain specified text")
				h4 HINTS
				ul 
					li The following logical operators are available for use - ftand (and), ftor (or), ftnot(not)
					li Make sure the text you are searching for is in quotes 'Wellington'
					li Here are some examples of valid searches
					ul
						li 'Wellington'
						li 'Wellington' ftand 'William'
						li 'Wellington' ftor 'William'
						li ftnot 'William' ftand 'Wellington' ftor 'Petoni'
				form(action="/stringResults",method="get")
					+input("text","searchString","Text","Search-Text",type="text")
					+submit-primary("Search")
		.container
			+panel-success("Search by TEI tags and attributes")
				form(action="/results",method="get")
					h4 HINTS
					ul
						li Here you can search for all the tags with certain attributes and then go to and view the documents they came from
						li The first Attribute must start with a @ and subsequent ones must have an and before them
						li Here are some examples of valid searches
						ul
							li Tag = name Attributes = ''
							li Tag = name Attributes = @type = 'place'
							li Tag = name Attributes = @type = 'place' and position() = 1
					+input("text","searchString","Search","Tag",type="text")
					+input("text","searchString","Attributes","XPath",type="xPath")
					+submit-primary("Search")
				br